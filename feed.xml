<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-08-20T14:43:04+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Everest</title><subtitle>Theme based on &lt;a href=&quot;http://materializecss.com&quot;&gt;Materialize.css&lt;/a&gt; for jekyll sites.
</subtitle><entry><title type="html">Git Remove All Commit Clear Git History</title><link href="http://localhost:4000/2020/08/20/git-remove-all-commit-clear-git-history" rel="alternate" type="text/html" title="Git Remove All Commit Clear Git History" /><published>2020-08-20T00:00:00+08:00</published><updated>2020-08-20T00:00:00+08:00</updated><id>http://localhost:4000/2020/08/20/git-remove-all-commit-clear-git-history</id><content type="html" xml:base="http://localhost:4000/2020/08/20/git-remove-all-commit-clear-git-history">&lt;blockquote&gt;
  &lt;p&gt;In this article i am showing how to clear Git history by removing all commits. You may need this if you want to delete sensitive data from the history of Git commits. After such cleanup you will have the latest version of your Git repository, but with the one commit only. Be aware that after resetting all the history of changes in your Git repository will be deleted as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-create-a-temporary-branch-and-checkout&quot; id=&quot;markdown-toc-1-create-a-temporary-branch-and-checkout&quot;&gt;1. Create a temporary branch and checkout:&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-add-all-files-to-the-temporary-branch-and-commit-the-changes&quot; id=&quot;markdown-toc-2-add-all-files-to-the-temporary-branch-and-commit-the-changes&quot;&gt;2. Add all files to the temporary branch and commit the changes:&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-delete-the-master-branch&quot; id=&quot;markdown-toc-3-delete-the-master-branch&quot;&gt;3. Delete the master branch:&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-rename-the-temporary-branch-to-master&quot; id=&quot;markdown-toc-4-rename-the-temporary-branch-to-master&quot;&gt;4. Rename the temporary branch to master:&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-forcefully-update-the-remote-repository&quot; id=&quot;markdown-toc-5-forcefully-update-the-remote-repository&quot;&gt;5. Forcefully update the remote repository:&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#reference&quot; id=&quot;markdown-toc-reference&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;1-create-a-temporary-branch-and-checkout&quot;&gt;1. Create a temporary branch and checkout:&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git checkout --orphan temp_branch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;2-add-all-files-to-the-temporary-branch-and-commit-the-changes&quot;&gt;2. Add all files to the temporary branch and commit the changes:&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git add -A
git commit -am &quot;The first commit after purge&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;3-delete-the-master-branch&quot;&gt;3. Delete the master branch:&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch -D master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;4-rename-the-temporary-branch-to-master&quot;&gt;4. Rename the temporary branch to master:&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git branch -m master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;5-forcefully-update-the-remote-repository&quot;&gt;5. Forcefully update the remote repository:&lt;/h3&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git push -f origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.shellhacks.com/git-remove-all-commits-clear-git-history-local-remote/&quot;&gt;Reference Link&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://stackoverflow.com/questions/13716658/how-to-delete-all-commit-history-in-github&quot;&gt;Reference from StackOverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Git&quot;]" /><category term="git" /><summary type="html">In this article i am showing how to clear Git history by removing all commits. You may need this if you want to delete sensitive data from the history of Git commits. After such cleanup you will have the latest version of your Git repository, but with the one commit only. Be aware that after resetting all the history of changes in your Git repository will be deleted as well.</summary></entry><entry><title type="html">PPT Resolution Problem with 3D Format</title><link href="http://localhost:4000/2020/07/06/ppt-resolution-problem-with-3d-format" rel="alternate" type="text/html" title="PPT Resolution Problem with 3D Format" /><published>2020-07-06T00:00:00+08:00</published><updated>2020-07-06T00:00:00+08:00</updated><id>http://localhost:4000/2020/07/06/ppt-resolution-problem-with-3d-format</id><content type="html" xml:base="http://localhost:4000/2020/07/06/ppt-resolution-problem-with-3d-format">&lt;p&gt;PPT can normally export as PDF with very high resolution (the vectorized file). However, I encounter a weird problem today that cannot export a high resolution PDF. After “debugging” and “doing experiments”, I’ve finally found the problem. It’s because of the 3D format settings.&lt;/p&gt;

&lt;!--more--&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#the-problem&quot; id=&quot;markdown-toc-the-problem&quot;&gt;The Problem:&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#solution&quot; id=&quot;markdown-toc-solution&quot;&gt;Solution:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;#To Make a long story short: Don’t use 3D formatting, if you want a vetor-quality PDF.&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem:&lt;/h2&gt;
&lt;p&gt;According to the need of a recent task, I need to design and draw a figure for a proposal. I did all the procedures as normal, but in the last step. I got the problem as mentioned above, the exported PDF file was with unacceptable quality. It looks obvious that the vector objects in the PPT was rasterized before saving. But I don’t know why.&lt;/p&gt;

&lt;h2 id=&quot;solution&quot;&gt;Solution:&lt;/h2&gt;
&lt;p&gt;After at least one hour of various trials and analysis, I finally found that the PPT object will get rasterized when the &lt;strong&gt;3D format&lt;/strong&gt; is added to it.&lt;/p&gt;

&lt;p&gt;Therefore, BEWARE when you have to use 3D format to get some special designs when you using PPT, remember that it will sacrafice the vector property of the objects.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Design&quot;]" /><category term="ppt" /><summary type="html">PPT can normally export as PDF with very high resolution (the vectorized file). However, I encounter a weird problem today that cannot export a high resolution PDF. After “debugging” and “doing experiments”, I’ve finally found the problem. It’s because of the 3D format settings.</summary></entry><entry><title type="html">Setup Checklist on Windows PC</title><link href="http://localhost:4000/2020/04/28/setup-checklist-on-windows-pc" rel="alternate" type="text/html" title="Setup Checklist on Windows PC" /><published>2020-04-28T00:00:00+08:00</published><updated>2020-04-28T00:00:00+08:00</updated><id>http://localhost:4000/2020/04/28/setup-checklist-on-windows-pc</id><content type="html" xml:base="http://localhost:4000/2020/04/28/setup-checklist-on-windows-pc">&lt;blockquote&gt;
  &lt;p&gt;Just got a new working laptop with Windows 10. Here make a checklist of essential tools and software to be installed and configured on it.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#cygwin&quot; id=&quot;markdown-toc-cygwin&quot;&gt;Cygwin&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#mobaxterm&quot; id=&quot;markdown-toc-mobaxterm&quot;&gt;MobaXTerm&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cygwin&quot;&gt;Cygwin&lt;/h2&gt;
&lt;p&gt;Get Linux feeling on windows. Download &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setup-x86_64.exe&lt;/code&gt; from it’s offical website, then use the tsinghua TUNA url: &lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/cygwin&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn/cygwin&lt;/a&gt; as the download source.&lt;/p&gt;

&lt;h2 id=&quot;mobaxterm&quot;&gt;MobaXTerm&lt;/h2&gt;
&lt;p&gt;SSH client. It’s free, it’s good.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Windows&quot;]" /><category term="windows" /><category term="checklist" /><summary type="html">Just got a new working laptop with Windows 10. Here make a checklist of essential tools and software to be installed and configured on it.</summary></entry><entry><title type="html">How to Setup a GIT server</title><link href="http://localhost:4000/2020/04/27/how-to-setup-a-git-server" rel="alternate" type="text/html" title="How to Setup a GIT server" /><published>2020-04-27T00:00:00+08:00</published><updated>2020-04-27T00:00:00+08:00</updated><id>http://localhost:4000/2020/04/27/how-to-setup-a-git-server</id><content type="html" xml:base="http://localhost:4000/2020/04/27/how-to-setup-a-git-server">&lt;blockquote&gt;
  &lt;p&gt;remote git repo is actually no difference from a local one. Here’s how to setup a LOCAL git server.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-install-git&quot; id=&quot;markdown-toc-1-install-git&quot;&gt;1. Install Git&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2add-a-git-user&quot; id=&quot;markdown-toc-2add-a-git-user&quot;&gt;2.Add a “git” user&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-create-ssh-certified-login&quot; id=&quot;markdown-toc-3-create-ssh-certified-login&quot;&gt;3. Create SSH Certified Login&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-initialize-a-git-repo&quot; id=&quot;markdown-toc-4-initialize-a-git-repo&quot;&gt;4. Initialize a Git Repo&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-ban-the-shell-login-optional&quot; id=&quot;markdown-toc-5-ban-the-shell-login-optional&quot;&gt;5. Ban the Shell Login (Optional)&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6-clone-remote-repository&quot; id=&quot;markdown-toc-6-clone-remote-repository&quot;&gt;6. Clone Remote Repository&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-git-remote&quot; id=&quot;markdown-toc-7-git-remote&quot;&gt;7. Git Remote&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#71-how-to-upload-a-local-directory-to-remote-repo&quot; id=&quot;markdown-toc-71-how-to-upload-a-local-directory-to-remote-repo&quot;&gt;7.1 How to upload a local directory to remote repo&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#reference&quot; id=&quot;markdown-toc-reference&quot;&gt;Reference:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-install-git&quot;&gt;1. Install Git&lt;/h2&gt;
&lt;p&gt;After setting up a linux system, e.g. Ubuntu server 16.06, install git:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2add-a-git-user&quot;&gt;2.Add a “git” user&lt;/h2&gt;
&lt;p&gt;Create a git user by:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;adduser git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3-create-ssh-certified-login&quot;&gt;3. Create SSH Certified Login&lt;/h2&gt;
&lt;p&gt;Collect all the public keys of possible users/machines (in their &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id_rsa.pub&lt;/code&gt; respectively). Put all the collected public keys in file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/git/.ssh/authorized_keys&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;e.g. on a remote server, type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh-copy-id git@[you-git-server-ip-address]&lt;/code&gt; to automatically add the current server’s public key to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;authorized_keys&lt;/code&gt; of the git server.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;4-initialize-a-git-repo&quot;&gt;4. Initialize a Git Repo&lt;/h2&gt;
&lt;p&gt;After logging in with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git&lt;/code&gt;, select a folder, e.g. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/sample&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd&lt;/code&gt; into this folder and type:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;git init &lt;span class=&quot;nt&quot;&gt;--bare&lt;/span&gt; sample.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With the command above, Git will generate a bare repository.
Since the Git repo on this server only aim for sharing, it doesn’t allow other users to login into the server and make changes. Therefore, we should set the owner:group of the repo as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo chown&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; git:git sample.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;5-ban-the-shell-login-optional&quot;&gt;5. Ban the Shell Login (Optional)&lt;/h2&gt;
&lt;p&gt;Based on the security concern, our git account is not supposed to allow SSH login. So we can acheive this by modifying &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt; file, in which we may find:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git:x:1001:1001:,,,:/home/git:bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;we change this to:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;6-clone-remote-repository&quot;&gt;6. Clone Remote Repository&lt;/h2&gt;
&lt;p&gt;Now we are able to clone remote git repo(s) on you local computer by:&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone git@[you-git-server-ip]:sample/sample.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;7-git-remote&quot;&gt;7. Git Remote&lt;/h2&gt;
&lt;p&gt;On the remote computer, just try pull/push etc. to use the remote repository.&lt;/p&gt;

&lt;h3 id=&quot;71-how-to-upload-a-local-directory-to-remote-repo&quot;&gt;7.1 How to upload a local directory to remote repo&lt;/h3&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.liaoxuefeng.com/wiki/896043488029600/899998870925664&quot;&gt;» 搭建GIT服务器&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Git&quot;]" /><category term="git" /><category term="ubuntu" /><summary type="html">remote git repo is actually no difference from a local one. Here’s how to setup a LOCAL git server.</summary></entry><entry><title type="html">How to Use Selenium to Auto Login</title><link href="http://localhost:4000/2020/04/26/how-to-use-selenium-to-auto-login" rel="alternate" type="text/html" title="How to Use Selenium to Auto Login" /><published>2020-04-26T00:00:00+08:00</published><updated>2020-04-26T00:00:00+08:00</updated><id>http://localhost:4000/2020/04/26/how-to-use-selenium-to-auto-login</id><content type="html" xml:base="http://localhost:4000/2020/04/26/how-to-use-selenium-to-auto-login">&lt;blockquote&gt;
  &lt;blockquote&gt;
    &lt;p&gt;使用Selenium自动化操作网页，以自动登陆（办公网）系统。&lt;/p&gt;
  &lt;/blockquote&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-selenium-and-chromedriver&quot; id=&quot;markdown-toc-1-selenium-and-chromedriver&quot;&gt;1. Selenium and ChromeDriver&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-开机自动启动&quot; id=&quot;markdown-toc-2-开机自动启动&quot;&gt;2. 开机自动启动&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-每12小时定时执行程序&quot; id=&quot;markdown-toc-3-每12小时定时执行程序&quot;&gt;3. 每12小时定时执行程序&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-selenium-and-chromedriver&quot;&gt;1. Selenium and ChromeDriver&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qiaotong1/article/details/50541099&quot;&gt;» selenium调用chrome&lt;/a&gt;
selenium操作chrome浏览器需要有ChromeDriver驱动来协助。&lt;/p&gt;

&lt;h2 id=&quot;2-开机自动启动&quot;&gt;2. 开机自动启动&lt;/h2&gt;
&lt;p&gt;在/etc/rc.local文件中添加：&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;su - &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;username] &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;/absolute/path/to/your/script/to/auto/run]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3-每12小时定时执行程序&quot;&gt;3. 每12小时定时执行程序&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/thinksasa/archive/2013/06/06/3121030.html&quot;&gt;» linux 定时执行任务&lt;/a&gt;
执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crontab -e&lt;/code&gt;命令，在弹出的文件中添加下面的代码：&lt;/p&gt;
&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/12 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;/absolute/path/to/your/script/to/auto/run]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;其中&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*/12&lt;/code&gt;表示每12小时执行一次。&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[]" /><category term="selenium" /><summary type="html">使用Selenium自动化操作网页，以自动登陆（办公网）系统。</summary></entry><entry><title type="html">Frequently used linux commands</title><link href="http://localhost:4000/2020/03/06/frequently-used-linux-commands" rel="alternate" type="text/html" title="Frequently used linux commands" /><published>2020-03-06T00:00:00+08:00</published><updated>2020-03-06T00:00:00+08:00</updated><id>http://localhost:4000/2020/03/06/frequently-used-linux-commands</id><content type="html" xml:base="http://localhost:4000/2020/03/06/frequently-used-linux-commands">&lt;!--more--&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#check-hardware-info&quot; id=&quot;markdown-toc-check-hardware-info&quot;&gt;Check Hardware Info:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;check-hardware-info&quot;&gt;Check Hardware Info:&lt;/h1&gt;

&lt;p&gt;Check CPU:
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lscpu&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;or check the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/proc/cpu&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[]" /><summary type="html"></summary></entry><entry><title type="html">How To Open A Port In CentOS 7 With Fiewalld</title><link href="http://localhost:4000/2019/12/02/how-to-open-a-port-in-centos-7-with-fiewalld" rel="alternate" type="text/html" title="How To Open A Port In CentOS 7 With Fiewalld" /><published>2019-12-02T00:00:00+08:00</published><updated>2019-12-02T00:00:00+08:00</updated><id>http://localhost:4000/2019/12/02/how-to-open-a-port-in-centos-7-with-fiewalld</id><content type="html" xml:base="http://localhost:4000/2019/12/02/how-to-open-a-port-in-centos-7-with-fiewalld">&lt;h2 id=&quot;open-specific-port&quot;&gt;Open Specific Port&lt;/h2&gt;

&lt;p&gt;Opening a port in firewalld is fairly straightforward, in the below example we allow traffic in from any source IP address to TCP port 100. First we modify the persistent configuration, then we reload firewall-cmd to load this change into the running configuration.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[root@centos7 ~]# firewall-cmd --permanent --add-port=100/tcp
success
[root@centos7 ~]# firewall-cmd --reload
success
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If the –permanent flag is not specified, this will only change the running configuration but will not be saved.&lt;/p&gt;

&lt;p&gt;We can check the ports that are opened in the current default zone with ‘–list-ports’.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[root@centos7 ~]# firewall-cmd --list-ports
100/tcp
As expected we see that TCP port 100 is open.

Should we wish to remove a port, we can use ‘--remove-port=’ instead.

We can also open a range of ports in the same way.

[root@centos7 ~]# firewall-cmd --permanent --add-port=200-300/tcp
success
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;!--more--&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#open-specific-port&quot; id=&quot;markdown-toc-open-specific-port&quot;&gt;Open Specific Port&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#reference&quot; id=&quot;markdown-toc-reference&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.rootusers.com/how-to-open-a-port-in-centos-7-with-firewalld/&quot;&gt;» Check this link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[]" /><summary type="html">Open Specific Port Opening a port in firewalld is fairly straightforward, in the below example we allow traffic in from any source IP address to TCP port 100. First we modify the persistent configuration, then we reload firewall-cmd to load this change into the running configuration. [root@centos7 ~]# firewall-cmd --permanent --add-port=100/tcp success [root@centos7 ~]# firewall-cmd --reload success If the –permanent flag is not specified, this will only change the running configuration but will not be saved. We can check the ports that are opened in the current default zone with ‘–list-ports’. [root@centos7 ~]# firewall-cmd --list-ports 100/tcp As expected we see that TCP port 100 is open. Should we wish to remove a port, we can use ‘--remove-port=’ instead. We can also open a range of ports in the same way. [root@centos7 ~]# firewall-cmd --permanent --add-port=200-300/tcp success</summary></entry><entry><title type="html">What is the Difference Between Using source and sh</title><link href="http://localhost:4000/2019/11/12/what-is-the-difference-between-using-source-and-sh" rel="alternate" type="text/html" title="What is the Difference Between Using source and sh" /><published>2019-11-12T00:00:00+08:00</published><updated>2019-11-12T00:00:00+08:00</updated><id>http://localhost:4000/2019/11/12/what-is-the-difference-between-using-source-and-sh</id><content type="html" xml:base="http://localhost:4000/2019/11/12/what-is-the-difference-between-using-source-and-sh">&lt;h2 id=&quot;short-answer&quot;&gt;Short Answer:&lt;/h2&gt;
&lt;p&gt;When you call source (or its alias .), you insert the script in the &lt;strong&gt;current&lt;/strong&gt; bash process. So you could read variables set by the script.&lt;/p&gt;

&lt;p&gt;When you call sh, you initiate a fork (sub-process) that runs a new session of /bin/sh, which is usually a symbolic link to bash. In this case, environment variables set by the sub-script would be dropped when the sub-script finishes.&lt;/p&gt;

&lt;p&gt;Caution: sh could be a symlink to another shell.&lt;/p&gt;

&lt;!--more--&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#short-answer&quot; id=&quot;markdown-toc-short-answer&quot;&gt;Short Answer:&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#reference&quot; id=&quot;markdown-toc-reference&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/13786499/what-is-the-difference-between-using-sh-and-source&quot;&gt;» what is the difference between using source and sh?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Operating System&quot;]" /><category term="linux" /><category term="bash" /><summary type="html">Short Answer: When you call source (or its alias .), you insert the script in the current bash process. So you could read variables set by the script. When you call sh, you initiate a fork (sub-process) that runs a new session of /bin/sh, which is usually a symbolic link to bash. In this case, environment variables set by the sub-script would be dropped when the sub-script finishes. Caution: sh could be a symlink to another shell.</summary></entry><entry><title type="html">English Writing Materials</title><link href="http://localhost:4000/2019/11/11/english-writing-materials" rel="alternate" type="text/html" title="English Writing Materials" /><published>2019-11-11T00:00:00+08:00</published><updated>2019-11-11T00:00:00+08:00</updated><id>http://localhost:4000/2019/11/11/english-writing-materials</id><content type="html" xml:base="http://localhost:4000/2019/11/11/english-writing-materials">&lt;!--more--&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[]" /><summary type="html"></summary></entry><entry><title type="html">NodeJS vs Django</title><link href="http://localhost:4000/2019/11/01/nodejs-vs-django" rel="alternate" type="text/html" title="NodeJS vs Django" /><published>2019-11-01T00:00:00+08:00</published><updated>2019-11-01T00:00:00+08:00</updated><id>http://localhost:4000/2019/11/01/nodejs-vs-django</id><content type="html" xml:base="http://localhost:4000/2019/11/01/nodejs-vs-django">&lt;blockquote&gt;
  &lt;p&gt;Node.js, Django, which is better?&lt;/p&gt;

  &lt;p&gt;Node.js has a “JavaScript everywhere” motive to ensure JavaScript is used on the server-side and client-side of web applications and Django has a “framework for perfectionists with deadlines” motive to help developers build applications quickly.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;
&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#nodejs&quot; id=&quot;markdown-toc-nodejs&quot;&gt;Node.js&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#pros&quot; id=&quot;markdown-toc-pros&quot;&gt;Pros&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cons&quot; id=&quot;markdown-toc-cons&quot;&gt;Cons&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#django&quot; id=&quot;markdown-toc-django&quot;&gt;Django&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#pros-1&quot; id=&quot;markdown-toc-pros-1&quot;&gt;Pros&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#cons-1&quot; id=&quot;markdown-toc-cons-1&quot;&gt;Cons&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#reference&quot; id=&quot;markdown-toc-reference&quot;&gt;Reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;nodejs&quot;&gt;Node.js&lt;/h2&gt;

&lt;p&gt;JavaScript is known mainly for its strengths in client-side development, but Node.js is doing the exact opposite by working wonders on the server-side.&lt;/p&gt;

&lt;h3 id=&quot;pros&quot;&gt;Pros&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Availability of great libraries.&lt;/li&gt;
  &lt;li&gt;High performance.&lt;/li&gt;
  &lt;li&gt;Awesome for building APIs.&lt;/li&gt;
  &lt;li&gt;It has an awesome package manager.&lt;/li&gt;
  &lt;li&gt;Huge user community.&lt;/li&gt;
  &lt;li&gt;Handles concurrent requests easily.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cons&quot;&gt;Cons&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Asynchronous programming could be difficult to work with.&lt;/li&gt;
  &lt;li&gt;Not great with CPU intensive apps due to its single thread.&lt;/li&gt;
  &lt;li&gt;Callbacks result in tons of nested callbacks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;django&quot;&gt;Django&lt;/h2&gt;
&lt;p&gt;Django is a very robust open source Python web framework. It is very high-level, as most of the low-level stuff has been abstracted out. It is known for having a “batteries included” philosophy, therefore it’s ready to be used out-of-the-box.&lt;/p&gt;

&lt;h3 id=&quot;pros-1&quot;&gt;Pros&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Little to no security loopholes.&lt;/li&gt;
  &lt;li&gt;Works fine with relational databases.&lt;/li&gt;
  &lt;li&gt;Easy to learn.&lt;/li&gt;
  &lt;li&gt;Speedy development process.&lt;/li&gt;
  &lt;li&gt;Very scalable.&lt;/li&gt;
  &lt;li&gt;Huge user community.&lt;/li&gt;
  &lt;li&gt;Has great documentation.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;cons-1&quot;&gt;Cons&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;Django is monolithic, i.e. a single-tiered software application.&lt;/li&gt;
  &lt;li&gt;Not great for small-scale apps.&lt;/li&gt;
  &lt;li&gt;A full understanding of the framework is needed.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://dzone.com/articles/nodejs-vs-djangois-javascript-better-than-python&quot;&gt;» Node.js vs. Django:  Is JavaScript Better Than Python?&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Web Developing&quot;]" /><category term="nodejs" /><category term="django" /><summary type="html">Node.js, Django, which is better? Node.js has a “JavaScript everywhere” motive to ensure JavaScript is used on the server-side and client-side of web applications and Django has a “framework for perfectionists with deadlines” motive to help developers build applications quickly.</summary></entry></feed>