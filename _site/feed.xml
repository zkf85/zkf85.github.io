<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-01-23T13:49:31+08:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">ZKF’s Playground</title><subtitle>Theme based on &lt;a href=&quot;http://materializecss.com&quot;&gt;Materialize.css&lt;/a&gt; for jekyll sites.
</subtitle><entry><title type="html">How to Force Keras to use CPU to Run Script?</title><link href="http://localhost:4000/2019/01/23/how-to-force-keraas-use-cpu" rel="alternate" type="text/html" title="How to Force Keras to use CPU to Run Script?" /><published>2019-01-23T14:00:00+08:00</published><updated>2019-01-23T14:00:00+08:00</updated><id>http://localhost:4000/2019/01/23/how-to-force-keraas-use-cpu</id><content type="html" xml:base="http://localhost:4000/2019/01/23/how-to-force-keraas-use-cpu">&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;The reason for such a demand:&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;My main training program was using the GPU fully. But I needed to get a prediction with another previously trained model urgently. I tried to use the GPU but I got OOM. Therefore, using CPU for the predicting job should be a good solution, and it did solve the problem!&lt;/p&gt;

  &lt;p&gt;Generally there are two ways: a short/lazy one and a lengthy but graceful one.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;option-i&quot;&gt;Option I:&lt;/h2&gt;
&lt;p&gt;If you want to force Keras to use CPU&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CUDA_DEVICE_ORDER&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;PCI_BUS_ID&quot;&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;environ&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;CUDA_VISIBLE_DEVICES&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;before Keras / Tensorflow is imported.&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;option-ii&quot;&gt;Option II:&lt;/h2&gt;
&lt;p&gt;A rather graceful and separable way of doing this is to use&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;keras&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;backend&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;num_cores&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;GPU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;num_GPU&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;num_CPU&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CPU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;num_CPU&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;num_GPU&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConfigProto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intra_op_parallelism_threads&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_cores&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;\
        &lt;span class=&quot;n&quot;&gt;inter_op_parallelism_threads&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_cores&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;allow_soft_placement&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;\
        &lt;span class=&quot;n&quot;&gt;device_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'CPU'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_CPU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'GPU'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_GPU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here with &lt;code class=&quot;highlighter-rouge&quot;&gt;booleans&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;GPU&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;CPU&lt;/code&gt; you can specify whether to use a GPU or GPU when running your code.&lt;/p&gt;

&lt;p&gt;The only thing to note is that you’ll need &lt;code class=&quot;highlighter-rouge&quot;&gt;tensorflow-gpu&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;cuda/cudnn&lt;/code&gt; installed because you’re always giving the option of using a GPU.&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/40690598/can-keras-with-tensorflow-backend-be-forced-to-use-cpu-or-gpu-at-will&quot;&gt;» Can Keras with Tensorflow backend be forced to use CPU or GPU at will? - Stack Overflow&lt;/a&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Deep Learning&quot;]" /><category term="how-to" /><category term="keras" /><category term="tensorflow" /><category term="deep learning" /><category term="gpu" /><category term="nvidia" /><category term="cuda" /><summary type="html">The reason for such a demand: My main training program was using the GPU fully. But I needed to get a prediction with another previously trained model urgently. I tried to use the GPU but I got OOM. Therefore, using CPU for the predicting job should be a good solution, and it did solve the problem! Generally there are two ways: a short/lazy one and a lengthy but graceful one. Option I: If you want to force Keras to use CPU import os os.environ[&quot;CUDA_DEVICE_ORDER&quot;] = &quot;PCI_BUS_ID&quot; os.environ[&quot;CUDA_VISIBLE_DEVICES&quot;] = &quot;&quot; before Keras / Tensorflow is imported.</summary></entry><entry><title type="html">How to Add a Table of Content to my Jekyll Blog?</title><link href="http://localhost:4000/2019/01/23/how-to-add-table-of-content-in-jekyll" rel="alternate" type="text/html" title="How to Add a Table of Content to my Jekyll Blog?" /><published>2019-01-23T11:20:00+08:00</published><updated>2019-01-23T11:20:00+08:00</updated><id>http://localhost:4000/2019/01/23/how-to-add-table-of-content-in-jekyll</id><content type="html" xml:base="http://localhost:4000/2019/01/23/how-to-add-table-of-content-in-jekyll">&lt;p&gt;In the post, simple add:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* TOC
{:toc} 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;in the post.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.seanbuscay.com/blog/jekyll-toc-markdown/&quot;&gt;» How I Add a Table of Contents to my Jekyll Blog Written in Markdown&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Web Developing&quot;]" /><category term="how-to" /><category term="jekyll" /><summary type="html">In the post, simple add: * TOC {:toc} in the post. » How I Add a Table of Contents to my Jekyll Blog Written in Markdown</summary></entry><entry><title type="html">How to Add a Scroll Back to Top Button?</title><link href="http://localhost:4000/2019/01/23/how-to-add-back-to-top-button" rel="alternate" type="text/html" title="How to Add a Scroll Back to Top Button?" /><published>2019-01-23T09:40:00+08:00</published><updated>2019-01-23T09:40:00+08:00</updated><id>http://localhost:4000/2019/01/23/how-to-add-back-to-top-button</id><content type="html" xml:base="http://localhost:4000/2019/01/23/how-to-add-back-to-top-button">&lt;blockquote&gt;
  &lt;p&gt;Check this below:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.w3schools.com/howto/howto_js_scroll_to_top.asp&quot;&gt;»How To Create a Scroll To Top Button - W3Schools&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Web Developing&quot;]" /><category term="how-to" /><category term="jekyll" /><summary type="html">Check this below: »How To Create a Scroll To Top Button - W3Schools</summary></entry><entry><title type="html">How to Sort Site Tags in Jekyll?</title><link href="http://localhost:4000/2019/01/23/how-to-sort-tags-in-jekyll" rel="alternate" type="text/html" title="How to Sort Site Tags in Jekyll?" /><published>2019-01-23T09:20:00+08:00</published><updated>2019-01-23T09:20:00+08:00</updated><id>http://localhost:4000/2019/01/23/how-to-sort-tags-in-jekyll</id><content type="html" xml:base="http://localhost:4000/2019/01/23/how-to-sort-tags-in-jekyll">&lt;blockquote&gt;
  &lt;p&gt;Check this Article:&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https://www.codeofclimber.ru/2015/sorting-site-tags-in-jekyll/&quot;&gt;» Sorting site tags in Jekyll - by “code of climber”&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Web Developing&quot;]" /><category term="how-to" /><category term="jekyll" /><summary type="html">Check this Article: » Sorting site tags in Jekyll - by “code of climber”</summary></entry><entry><title type="html">[CS229] Descriminative Learning v.s. Generative Learning Algorithm</title><link href="http://localhost:4000/2019/01/22/generative-learning" rel="alternate" type="text/html" title="[CS229] Descriminative Learning v.s. Generative Learning Algorithm" /><published>2019-01-22T14:30:00+08:00</published><updated>2019-01-22T14:30:00+08:00</updated><id>http://localhost:4000/2019/01/22/generative-learning</id><content type="html" xml:base="http://localhost:4000/2019/01/22/generative-learning">&lt;blockquote&gt;
  &lt;p&gt;Generative Learning Algorithms:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;the origin of the different ideas,&lt;/li&gt;
    &lt;li&gt;the definitions,&lt;/li&gt;
    &lt;li&gt;more about generative learning algorithms.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/public/img/20190122-bayes-theorem.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#1-an-example-to-explain-the-initiative-ideas&quot; id=&quot;markdown-toc-1-an-example-to-explain-the-initiative-ideas&quot;&gt;1. An Example to Explain the Initiative Ideas:&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#approach-i&quot; id=&quot;markdown-toc-approach-i&quot;&gt;&lt;strong&gt;Approach I:&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#approach-ii&quot; id=&quot;markdown-toc-approach-ii&quot;&gt;&lt;strong&gt;Approach II:&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-definitions&quot; id=&quot;markdown-toc-2-definitions&quot;&gt;2. Definitions:&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#discriminative-learning-algorithms&quot; id=&quot;markdown-toc-discriminative-learning-algorithms&quot;&gt;&lt;strong&gt;Discriminative&lt;/strong&gt; learning algorithms:&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#generative-learning-algorithms&quot; id=&quot;markdown-toc-generative-learning-algorithms&quot;&gt;&lt;strong&gt;Generative&lt;/strong&gt; learning algorithms:&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-more-about-generative-learning-algorithms&quot; id=&quot;markdown-toc-3-more-about-generative-learning-algorithms&quot;&gt;3. More about Generative Learning Algorithms:&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-an-example-to-explain-the-initiative-ideas&quot;&gt;1. An Example to Explain the Initiative Ideas:&lt;/h2&gt;
&lt;p&gt;Consider a classification problem in which we want to learn to distinguish between cats &lt;script type=&quot;math/tex&quot;&gt;(y=0)&lt;/script&gt; and dogs &lt;script type=&quot;math/tex&quot;&gt;(y=1)&lt;/script&gt;:&lt;/p&gt;

&lt;h3 id=&quot;approach-i&quot;&gt;&lt;strong&gt;Approach I:&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Based on some features of an animal, given a training set, an algorithm like &lt;strong&gt;&lt;em&gt;logistic regression&lt;/em&gt;&lt;/strong&gt; or &lt;strong&gt;&lt;em&gt;perceptron&lt;/em&gt;&lt;/strong&gt; algorithm, tries to find a &lt;strong&gt;decision boundary&lt;/strong&gt; (e.g. a straight line) to separate the cats and the dogs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To classify a new animal:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Just check on which side of the decision boundary it falls.&lt;/p&gt;

&lt;h3 id=&quot;approach-ii&quot;&gt;&lt;strong&gt;Approach II:&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;First, look at cats, build a model of &lt;strong&gt;what cats look like&lt;/strong&gt;. Then, look at dogs, build another model of &lt;strong&gt;whawt dogs look like&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;To classify a new animal:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Match the new animal against the cat model and the dog model respectively, to see whether the new animal looks more like the cats or more like the dogs we had seen in the training set.&lt;/p&gt;

&lt;h2 id=&quot;2-definitions&quot;&gt;2. Definitions:&lt;/h2&gt;
&lt;h3 id=&quot;discriminative-learning-algorithms&quot;&gt;&lt;strong&gt;Discriminative&lt;/strong&gt; learning algorithms:&lt;/h3&gt;

&lt;p&gt;Algorithms that try to learn &lt;script type=&quot;math/tex&quot;&gt;p(y \vert x)&lt;/script&gt; directly (such as logistic regression) or algorithms that try to learn mappings directly from the space of input &lt;script type=&quot;math/tex&quot;&gt;chi&lt;/script&gt; to the labels &lt;script type=&quot;math/tex&quot;&gt;\{0,1\}&lt;/script&gt; (such as perceptron algorithm) are called &lt;strong&gt;discriminative&lt;/strong&gt; learning algorithms.&lt;/p&gt;

&lt;h3 id=&quot;generative-learning-algorithms&quot;&gt;&lt;strong&gt;Generative&lt;/strong&gt; learning algorithms:&lt;/h3&gt;

&lt;p&gt;Algorithms that instead try to model &lt;script type=&quot;math/tex&quot;&gt;p(x \vert y)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;p(y)&lt;/script&gt; are called &lt;strong&gt;generative&lt;/strong&gt; learning algorithms.&lt;/p&gt;

&lt;h2 id=&quot;3-more-about-generative-learning-algorithms&quot;&gt;3. More about Generative Learning Algorithms:&lt;/h2&gt;

&lt;p&gt;Continue with the example of cats and dogs, if &lt;script type=&quot;math/tex&quot;&gt;y&lt;/script&gt; indicates whether an sample is a cat (0) or a dog (1), then&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;p(x \vert y=0)&lt;/script&gt; models the distribution of cats’ features.&lt;/li&gt;
  &lt;li&gt;&lt;script type=&quot;math/tex&quot;&gt;p(x \vert y=1)&lt;/script&gt; models the distribution of dogs’ features.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After modeling &lt;script type=&quot;math/tex&quot;&gt;p(y)&lt;/script&gt; (called the &lt;strong&gt;class priors&lt;/strong&gt;) and &lt;script type=&quot;math/tex&quot;&gt;p(x \vert y)&lt;/script&gt;, our algorithm can then use &lt;strong&gt;Bayes Rule&lt;/strong&gt; to derive the posterior distribution on &lt;script type=&quot;math/tex&quot;&gt;y&lt;/script&gt; given &lt;script type=&quot;math/tex&quot;&gt;x&lt;/script&gt;:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;p(y \vert x) = \frac{p(x \vert y)p(y)}{p(x)}.&lt;/script&gt;

&lt;p&gt;Here, the denominator is given by &lt;script type=&quot;math/tex&quot;&gt;p(x)=\sum_i p(x \vert y_i)p(y_i)&lt;/script&gt;. In cats &amp;amp; dogs example, &lt;script type=&quot;math/tex&quot;&gt;p(x)=p(x \vert y=0)p(y=0)+p(x \vert y=1)p(y=1)&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Actually, if we we’re calculating &lt;script type=&quot;math/tex&quot;&gt;p(y \vert x)&lt;/script&gt; in order to make a prediction, then we don’t need to calculate the denominator, since&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;% &lt;![CDATA[
\begin{align}
\arg\underset{y}{\max} p(y \vert x) &amp; = \arg \underset{y}{\max} \frac{p(x \vert y)p(y)}{p(x)} \\
&amp; = \arg \underset{y}{\max} p(x \vert y)p(y).
\end{align} %]]&gt;&lt;/script&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Notes&quot;]" /><category term="machine learning" /><category term="cs229" /><summary type="html">Generative Learning Algorithms: the origin of the different ideas, the definitions, more about generative learning algorithms.</summary></entry><entry><title type="html">How to Support LaTex in Jekyll?</title><link href="http://localhost:4000/2019/01/22/how-to-render-latex-in-jekyll" rel="alternate" type="text/html" title="How to Support LaTex in Jekyll?" /><published>2019-01-22T14:00:00+08:00</published><updated>2019-01-22T14:00:00+08:00</updated><id>http://localhost:4000/2019/01/22/how-to-render-latex-in-jekyll</id><content type="html" xml:base="http://localhost:4000/2019/01/22/how-to-render-latex-in-jekyll">&lt;blockquote&gt;
  &lt;p&gt;To render math symbols and formula using LaTex in Jekyll website, here’s the way:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/10987992/using-mathjax-with-jekyll&quot;&gt;» mathjax-with-jekyll on Stack Overflow&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://www.iangoodfellow.com/blog/jekyll/markdown/tex/2016/11/07/latex-in-markdown.html&quot;&gt;» Iangoodfellow on LaTex in Jekyll&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Web Developing&quot;]" /><category term="how-to" /><category term="jekyll" /><category term="latex" /><summary type="html">To render math symbols and formula using LaTex in Jekyll website, here’s the way: Reference » mathjax-with-jekyll on Stack Overflow » Iangoodfellow on LaTex in Jekyll</summary></entry><entry><title type="html">What does ‘rc’ Mean in Unix-like systems, or even in Matplotlib rcParams?</title><link href="http://localhost:4000/2019/01/17/what-does-rc-mean" rel="alternate" type="text/html" title="What does 'rc' Mean in Unix-like systems, or even in Matplotlib rcParams?" /><published>2019-01-17T12:30:00+08:00</published><updated>2019-01-17T12:30:00+08:00</updated><id>http://localhost:4000/2019/01/17/what-does-rc-mean</id><content type="html" xml:base="http://localhost:4000/2019/01/17/what-does-rc-mean">&lt;blockquote&gt;
  &lt;p&gt;In the context of Unix-like systems, the term rc stands for the phrase &lt;strong&gt;“run commands”&lt;/strong&gt;. It is used for any file that contains startup information for a command. It is believed to have originated somewhere in 1965 from a runcom facility from the MIT Compatible Time-Sharing System (CTSS).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From Brian Kernighan and Dennis Ritchie:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There was a facility that would execute a bunch of commands stored in a file; it was called runcom for “run commands”, and the file began to be called “a runcom”. rc in Unix is a fossil from that usage.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;p&gt;Tom Van Vleck, a Multics engineer, has also reminisced about the extension rc: “The idea of having the command processing shell be an ordinary slave program came from the Multics design, and a predecessor program on CTSS by Louis Pouzin called RUNCOM, the source of the ‘.rc’ suffix on some Unix configuration files.”&lt;/p&gt;

&lt;p&gt;This is also the origin of the name of the Plan 9 from Bell Labs shell by Tom Duff, the rc shell. It is called “rc” because the main job of a shell is to “run commands”.&lt;/p&gt;

&lt;p&gt;While not historically precise, rc may also be expanded as “run control”, because an rc file controls how a program runs. For instance, the editor Vim looks for and reads the contents of the .vimrc file to determine its initial configuration. In The Art of Unix Programming, Eric S. Raymond consistently refers to rc files as “run-control” files.&lt;/p&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Run_commands&quot;&gt;» Run commands - Wikipedia&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Python&quot;, &quot;Operating System&quot;]" /><category term="python" /><category term="unix" /><category term="linux" /><category term="matplotlib" /><summary type="html">In the context of Unix-like systems, the term rc stands for the phrase “run commands”. It is used for any file that contains startup information for a command. It is believed to have originated somewhere in 1965 from a runcom facility from the MIT Compatible Time-Sharing System (CTSS). From Brian Kernighan and Dennis Ritchie: There was a facility that would execute a bunch of commands stored in a file; it was called runcom for “run commands”, and the file began to be called “a runcom”. rc in Unix is a fossil from that usage.</summary></entry><entry><title type="html">How to Draw Contour Plot for Gradient Descent in Python</title><link href="http://localhost:4000/2019/01/17/gradient-descent-plot-contour" rel="alternate" type="text/html" title="How to Draw Contour Plot for Gradient Descent in Python" /><published>2019-01-17T09:10:00+08:00</published><updated>2019-01-17T09:10:00+08:00</updated><id>http://localhost:4000/2019/01/17/gradient-descent-plot-contour</id><content type="html" xml:base="http://localhost:4000/2019/01/17/gradient-descent-plot-contour">&lt;blockquote&gt;
  &lt;p&gt;The contour plot that showing the path of gradient descent often appears in the introductory part of machine learning. The following plot is an classic example from Andrew Ng’s CS229. In this article, I’d like to try and take a record on how to draw such a Gradient Descent contour plot in Python.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/public/img/20190117-contour_cs229.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;reference&quot;&gt;Reference&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://www.adeveloperdiary.com/data-science/how-to-visualize-gradient-descent-using-contour-plot-in-python/&quot;&gt;» How to visualize Gradient Descent using Contour plot in Python - Abhisek Jana&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://matplotlib.org/tutorials/toolkits/mplot3d.html#toolkit-mplot3d-tutorial&quot;&gt;» The mplt3d Toolkit - matplotlib Official&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://matplotlib.org/gallery/index.html#mplot3d-examples-index&quot;&gt;» 3d Plotting examples - matplotlib Official&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Python&quot;]" /><category term="python" /><category term="how-to" /><category term="machine learning" /><summary type="html">The contour plot that showing the path of gradient descent often appears in the introductory part of machine learning. The following plot is an classic example from Andrew Ng’s CS229. In this article, I’d like to try and take a record on how to draw such a Gradient Descent contour plot in Python.</summary></entry><entry><title type="html">How to Execute a script directly within vi/vim</title><link href="http://localhost:4000/2019/01/16/execute-script-directly-in-vim" rel="alternate" type="text/html" title="How to Execute a script directly within vi/vim" /><published>2019-01-16T12:53:00+08:00</published><updated>2019-01-16T12:53:00+08:00</updated><id>http://localhost:4000/2019/01/16/execute-script-directly-in-vim</id><content type="html" xml:base="http://localhost:4000/2019/01/16/execute-script-directly-in-vim">&lt;blockquote&gt;
  &lt;p&gt;Short Answer:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://stackoverflow.com/questions/3166413/execute-a-script-directly-within-vim-mvim-gvim&quot;&gt;» Answer from Stack Overflow&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can do this in vim using the &lt;code class=&quot;highlighter-rouge&quot;&gt;!&lt;/code&gt; command. For instance to count the number of words in the current file you can do:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:! wc %
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt; is replaced by the current filename. To run a script you could call the interpreter on the file - for instance if you are writing a python script:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;:! python %
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;!--more--&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Notes&quot;]" /><category term="python" /><category term="vim" /><category term="how-to" /><summary type="html">Short Answer: » Answer from Stack Overflow You can do this in vim using the ! command. For instance to count the number of words in the current file you can do: :! wc % The % is replaced by the current filename. To run a script you could call the interpreter on the file - for instance if you are writing a python script: :! python %</summary></entry><entry><title type="html">I Don’t Like Jupyter Notebook</title><link href="http://localhost:4000/2019/01/16/i-dont-like-jupyter-notebook" rel="alternate" type="text/html" title="I Don't Like Jupyter Notebook" /><published>2019-01-16T09:45:00+08:00</published><updated>2019-01-16T09:45:00+08:00</updated><id>http://localhost:4000/2019/01/16/i-dont-like-jupyter-notebook</id><content type="html" xml:base="http://localhost:4000/2019/01/16/i-dont-like-jupyter-notebook">&lt;blockquote&gt;
  &lt;p&gt;I’ve struggled with Jupyter Notebook for a long time and I have to write it down this time - I don’t like it! And I feel relieved when I found that I’m not alone. And here’re the reasons …&lt;/p&gt;
&lt;/blockquote&gt;

&lt;!--more--&gt;

&lt;h2 id=&quot;1-we-dont-like-it&quot;&gt;1. “WE DON’T LIKE IT!”&lt;/h2&gt;
&lt;p&gt;Not only me feels that it’s not a quite good tool in some way:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://owainkenwayucl.github.io/2017/10/03/WhyIDontLikeNotebooks.html&quot;&gt;» Why I don’t like Jupyter Notebooks - Dr Owain Kenway&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://opiateforthemass.es/articles/why-i-dont-like-jupyter-fka-ipython-notebook/&quot;&gt;» Why I Don’t Like Jupyter (FKA IPython Notebook) - KIRILL POMOGAJKO&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;As for me, the reasons why I don’t like to use this tool as a major tool for data analysis are:&lt;/p&gt;

&lt;h2 id=&quot;2-and-we-have-reasons&quot;&gt;2. And We Have Reasons:&lt;/h2&gt;
&lt;p&gt;I don’t want to put a lot of word here like those two guys above. Here I just list the key points that Jupyter Notebooks annoyed me.&lt;/p&gt;

&lt;h3 id=&quot;21-code-in-chunk-is-annoying&quot;&gt;2.1. Code in Chunk is annoying!!&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Code can only be run in chunks but not line by line.&lt;/li&gt;
  &lt;li&gt;Order matters when running code, which could often bring problems.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;22-file-format-incompatible-with-version-control&quot;&gt;2.2. File format incompatible with version control&lt;/h3&gt;
&lt;p&gt;It’s json, not python source code. It’s bad for version control.&lt;/p&gt;

&lt;h3 id=&quot;23-in-order-to-read-your-codedocument-people-have-to-install-jupyter-notebook&quot;&gt;2.3. In order to read your code/document people have to install Jupyter Notebook&lt;/h3&gt;
&lt;p&gt;Whenever you want to open and take a look at your code in such a notebook, you have to open a local web server and then open a browser. I’m a person preferring simplicity and I really hate this kind of experience.&lt;/p&gt;

&lt;h2 id=&quot;3-my-solution&quot;&gt;3. My Solution:&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;Keep using Vim only for coding in most cases.&lt;/li&gt;
  &lt;li&gt;For exploring, use the REPL (Read-Eval-Print-Loop) tool iPython.&lt;/li&gt;
  &lt;li&gt;Saving the plots in files as a default option in python codes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;&lt;strong&gt;&lt;em&gt;KF&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;</content><author><name></name></author><category term="[&quot;Python&quot;]" /><category term="ipython" /><category term="jupyter" /><summary type="html">I’ve struggled with Jupyter Notebook for a long time and I have to write it down this time - I don’t like it! And I feel relieved when I found that I’m not alone. And here’re the reasons …</summary></entry></feed>